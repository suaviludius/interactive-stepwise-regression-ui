#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import os # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π (—Ñ—É–Ω–∫—Ü–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã)
from datetime import datetime

# -- GUI -----------------------------------------------------------
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
from PyQt5.QtGui     import QIcon
from PyQt5.QtWidgets import QWidget, QVBoxLayout, QPushButton, QTextEdit

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# -- Import Regression & Design -------------------------------------------------
from src.core import StepwiseRegressionEngine   # Class Regression
from src.ui import FileHandler, FramelessWindow, Ui_MainWindow, StyleSheetTableDatabase, StyleSheetStatusBar, StyleSheetScrollBar, StyleSheetApp

# -- Import matplot ------------------------------------------------
import matplotlib
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT as NavigationToolbar
import matplotlib.pyplot as plt

class MainWindow(QMainWindow):
    ###################################
    # [ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—á–µ–≥–æ –æ–∫–Ω–∞ ] #
    ###################################
    def __init__(self, *args, **kwargs):
        super(MainWindow, self).__init__(*args, **kwargs)
        QMainWindow.__init__(self)
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ GUI

        self.setSB() # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º statusBar
        self.actionsDWTBMB()  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π dockWidget, toolBar, menuBar
        self.actionsMW()  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π mainWindow
        self.graphicsInit() # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–∞

        self.ui.dockExplorer.setVisible(False)
        self.ui.dockAnalyse.setVisible(False)
        self.ui.dockGraphics.setVisible(False)

        self.show() # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≥–æ, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å

    ####################################
    # [ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ–∫–Ω–∞] #
    ####################################

    # –°—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    def setSB(self):
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è statusBar
        self.statusBar = QStatusBar()
        self.b = QPushButton("click here")
        self.setStatusBar(self.statusBar)
        self.statusBar.showMessage("–°–º–æ—Ç—Ä–∏ –Ω–∞ –º–µ–Ω—è")
        self.statusBar.setStyleSheet(StyleSheetStatusBar)

    # –§–∞–π–ª–æ–≤–æ–µ –¥–µ—Ä–µ–≤–æ –¥–ª—è "–ü–†–û–í–û–î–ù–ò–ö"
    def setFT(self,path):
        self.model = QtWidgets.QFileSystemModel()
        self.model.setRootPath(QtCore.QDir.rootPath())
        self.model.setNameFilters(["*.xlsx","*.tree","*.rep"])  # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –Ω–∞ —Ç–∏–ø—ã –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
        self.model.setNameFilterDisables(False) # –°–æ–∫—Ä—ã—Ç–∏–µ —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–∞ –Ω–µ –≤—Ö–æ–¥—è—â–∏—Ö –≤ —Ñ–∏–ª—å—Ç—Ä

        self.FT = FileHandler(self, self.ui.treeView, self.model, self.ui.actionAnalyseTB, self.ui.actionReportTB);
        self.FT.setFT(path)

    #####################################################
    # [ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ dockWidget, toolBar, menuBar ] #
    #####################################################

    def actionsDWTBMB(self):
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è –ª–µ–≤–æ–≥–æ toolBar, —á—Ç–æ–±—ã –≤ –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –±—ã–ª–æ –∞–∫—Ç–∏–≤–Ω–æ —Ç–æ–ª—å–∫–æ 1 –¥–µ–π—Å—Ç–≤–∏–µ
        groupTB =  QActionGroup(self)
        groupTB.addAction(self.ui.actionHomeTB)
        groupTB.addAction(self.ui.actionAnalyseTB)
        groupTB.addAction(self.ui.actionReportTB)
        self.ui.actionHomeTB.setChecked(True)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–•" –¥–ª—è dockWidget
        self.ui.dockExplorer.visibilityChanged.connect(lambda: self.ui.actionExplorerMB.setChecked(self.ui.dockExplorer.isVisible()))
        self.ui.dockAnalyse.visibilityChanged.connect(lambda: self.ui.actionAnalyseMB.setChecked(self.ui.dockAnalyse.isVisible()))
        self.ui.dockGraphics.visibilityChanged.connect(lambda: self.ui.actionGraphicsMB.setChecked(self.ui.dockGraphics.isVisible()))

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –¥–ª—è –ª–µ–≤–æ–≥–æ toolBar
        self.ui.actionHomeTB.triggered.connect(lambda: self.ui.mainCenterBodyStacked.setCurrentWidget(self.ui.pageHome))
        self.ui.actionAnalyseTB.triggered.connect(lambda: self.ui.mainCenterBodyStacked.setCurrentWidget(self.ui.pageAnalyse))
        self.ui.actionReportTB.triggered.connect(lambda: self.ui.mainCenterBodyStacked.setCurrentWidget(self.ui.pageReport))

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –¥–ª—è –≤–µ—Ä—Ö–Ω–µ–≥–æ menuBar
        self.ui.actionOpenFileMB.triggered.connect(lambda: self.selectFile())
        self.ui.actionOpenFolderMB.triggered.connect(lambda: self.selectFolder())
        self.ui.actionExplorerMB.triggered.connect(lambda:self.ui.dockExplorer.setVisible(self.ui.actionExplorerMB.isChecked()))
        self.ui.actionAnalyseMB.triggered.connect(lambda: self.ui.dockAnalyse.setVisible(self.ui.actionAnalyseMB.isChecked()))
        self.ui.actionGraphicsMB.triggered.connect(lambda: self.ui.dockGraphics.setVisible(self.ui.actionGraphicsMB.isChecked()))
        self.ui.actionInstructionMB.triggered.connect(self.showInstruction)

    def showInstruction(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
        instruction_text = """
    <h1>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h1>
    <h2>–ê–Ω–∞–ª–∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –ª–∏–Ω–µ–π–Ω–æ–π —Ä–µ–≥—Ä–µ—Å—Å–∏–∏</h2>

    <h3>üìÅ 1. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö</h3>
    <p><b>–®–∞–≥ 1:</b> –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª" –∏–ª–∏ "–í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É" –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ</p>
    <p><b>–®–∞–≥ 2:</b> –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ .xlsx</p>
    <p><b>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –¥–∞–Ω–Ω—ã–º:</b></p>
    <ul>
        <li>–ù–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (X) –¥–æ–ª–∂–Ω—ã —Ä–∞—Å–ø–æ–ª–∞–≥–∞—Ç—å—Å—è –≤ –ø–µ—Ä–≤—ã—Ö —Å—Ç–æ–ª–±—Ü–∞—Ö</li>
        <li>–ó–∞–≤–∏—Å–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (Y) - –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å—Ç–æ–ª–±—Ü–∞—Ö</li>
        <li>–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö</li>
    </ul>

    <h3>‚öôÔ∏è 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–Ω–∞–ª–∏–∑–∞</h3>
    <p><b>–®–∞–≥ 3:</b> –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ê–Ω–∞–ª–∏–∑" (–∫–Ω–æ–ø–∫–∞ —Å –≥—Ä–∞—Ñ–∏–∫–æ–º –≤ –ª–µ–≤–æ–π –ø–∞–Ω–µ–ª–∏)</p>
    <p><b>–®–∞–≥ 4:</b> –í –¥–æ–∫–µ "–ê–Ω–∞–ª–∏–∑" –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:</p>
    <ul>
        <li>–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≤–∏—Å–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö</li>
        <li>–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∑–∞–≤–∏—Å–∏–º—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞</li>
        <li>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏</li>
    </ul>

    <h3>üîç 3. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ—à–∞–≥–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞</h3>
    <p><b>–ú–µ—Ç–æ–¥—ã –∞–Ω–∞–ª–∏–∑–∞:</b></p>
    <ul>
        <li><b>–û–±—Ä–∞—Ç–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ</b> - –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø–æ–ª–Ω–æ–π –º–æ–¥–µ–ª–∏, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—è–µ—Ç –Ω–∞–∏–º–µ–Ω–µ–µ –∑–Ω–∞—á–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ</li>
        <li><b>–ü—Ä—è–º–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ</b> - –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—É—Å—Ç–æ–π –º–æ–¥–µ–ª–∏, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–∞–∏–±–æ–ª–µ–µ –∑–Ω–∞—á–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ</li>
    </ul>

    <p><b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–º:</b></p>
    <ul>
        <li>–ö–Ω–æ–ø–∫–∞ <b>"–í–ø–µ—Ä–µ–¥"</b> - –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –∞–ª–≥–æ—Ä–∏—Ç–º–∞</li>
        <li>–ö–Ω–æ–ø–∫–∞ <b>"–ù–∞–∑–∞–¥"</b> - –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥</li>
        <li>–ö–Ω–æ–ø–∫–∞ <b>"–ó–∞–ø–æ–ª–Ω–∏—Ç—å"</b> - –≤–∫–ª—é—á–∏—Ç—å –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –º–æ–¥–µ–ª—å</li>
        <li>–ö–Ω–æ–ø–∫–∞ <b>"–û—á–∏—Å—Ç–∏—Ç—å"</b> - —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –º–æ–¥–µ–ª–∏</li>
    </ul>

    <h3>üìä 4. –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</h3>
    <p><b>–í —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ:</b></p>
    <ul>
        <li>–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–µ—Ç–µ—Ä–º–∏–Ω–∞—Ü–∏–∏ (R¬≤)</li>
        <li>F-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É</li>
        <li>–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—à–∏–±–∫—É –æ—Ü–µ–Ω–∫–∏</li>
        <li>–ì—Ä–∞—Ñ–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫</li>
    </ul>

    <h3>üíæ 5. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</h3>
    <p><b>–®–∞–≥ 5:</b> –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–û—Ç—á–µ—Ç"</p>
    <p><b>–®–∞–≥ 6:</b> –ù–∞–∂–º–∏—Ç–µ "–°–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç" –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Ñ–∞–π–ª .rep</p>

    <h3>üéØ –°–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é</h3>
    <ul>
        <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞</li>
        <li>–†—É—á–Ω–æ–π —Ä–µ–∂–∏–º –ø–æ–∑–≤–æ–ª—è–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∂–¥—ã–π —à–∞–≥</li>
        <li>–°–ª–µ–¥–∏—Ç–µ –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º R¬≤ - –æ–Ω –Ω–µ –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–º–µ–Ω—å—à–∞—Ç—å—Å—è</li>
        <li>–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –≥—Ä–∞—Ñ–∏–∫–∏ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞</li>
    </ul>

    <h3>‚ùå –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è</h3>
    <ul>
        <li><b>–§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è</b> - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö</li>
        <li><b>–ê–ª–≥–æ—Ä–∏—Ç–º –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</b> - —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã–±—Ä–∞–Ω–∞ –∑–∞–≤–∏—Å–∏–º–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è</li>
        <li><b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</b> - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –º—É–ª—å—Ç–∏–∫–æ–ª–ª–∏–Ω–µ–∞—Ä–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö</li>
    </ul>

    <p style="color: #3c90a4; font-weight: bold;">üìû –î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø–æ–º–æ—â–∏: powerranger1912@gmail.com</p>
    """

        # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
        dialog = QDialog(self)
        dialog.setWindowTitle("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        dialog.setMinimumSize(800, 600)
        dialog.setStyleSheet("""
            QDialog {
                background-color: #2b2b2b;
                color: #ffffff;
            }
            QScrollArea {
                border: none;
            }
        """)

        # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π HTML
        text_edit = QTextEdit()
        text_edit.setReadOnly(True)
        text_edit.setHtml(instruction_text)
        text_edit.setStyleSheet("""
            QTextEdit {
                background-color: #2b2b2b;
                color: #ffffff;
                border: none;
                font-family: Arial, sans-serif;
                font-size: 12px;
                padding: 10px;
            }
        """)

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
        close_button = QPushButton("–ó–∞–∫—Ä—ã—Ç—å")
        close_button.clicked.connect(dialog.accept)
        close_button.setStyleSheet("""
            QPushButton {
                background-color: #3c90a4;
                color: white;
                border: none;
                padding: 8px 16px;
                border-radius: 4px;
                font-weight: bold;
            }
            QPushButton:hover {
                background-color: #255a66;
            }
        """)

        # –ö–æ–º–ø–æ–Ω–æ–≤–∫–∞
        layout = QVBoxLayout()
        layout.addWidget(text_edit)
        layout.addWidget(close_button, alignment=Qt.AlignCenter)
        dialog.setLayout(layout)

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
        dialog.exec_()

    #############################################
    # [ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ dockWidget - Analyse ] #
    #############################################

    def actionsDWA(self):
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è dockWidget Auto-Hand, —á—Ç–æ–±—ã –≤ –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –±—ã–ª–æ –∞–∫—Ç–∏–≤–Ω–æ —Ç–æ–ª—å–∫–æ 1 –¥–µ–π—Å—Ç–≤–∏–µ
        groupModeAH =  QButtonGroup(self)
        groupModeAH.addButton(self.ui.buttonAutoMode)
        groupModeAH.addButton(self.ui.buttonHandMode)
        self.ui.buttonAutoMode.setChecked(True)

        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è dockWidget Back-Step, —á—Ç–æ–±—ã –≤ –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –±—ã–ª–æ –∞–∫—Ç–∏–≤–Ω–æ —Ç–æ–ª—å–∫–æ 1 –¥–µ–π—Å—Ç–≤–∏–µ
        groupModeBS =  QButtonGroup(self)
        groupModeBS.addButton(self.ui.buttonBackEleminate)
        groupModeBS.addButton(self.ui.buttonStepwise)
        self.ui.buttonBackEleminate.setChecked(True)

        # –ö–Ω–æ–ø–∫–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –ø–º–æ–¥—É–ª–µ–π dockWidget
        self.ui.pushButtonActions.clicked.connect(lambda: self.ui.actions.setVisible(self.ui.pushButtonActions.isChecked()))
        self.ui.pushButtonModes.clicked.connect(lambda: self.ui.modes.setVisible(self.ui.pushButtonModes.isChecked()))
        self.ui.pushButtonConstants.clicked.connect(lambda: self.ui.constParameters.setVisible(self.ui.pushButtonConstants.isChecked()))
        self.ui.pushButtonParameters.clicked.connect(lambda: self.ui.parameters.setVisible(self.ui.pushButtonParameters.isChecked()))

        self.ui.countYComboBox.currentIndexChanged.connect(self.setCountAndChoiceDepVar) # –í—ã–±–æ—Ä —á–∏—Å–ª–∞ –∑–∞–≤–∏—Å–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        self.ui.choiceYComboBox.currentIndexChanged.connect(self.setChoiceDepVar)   # –í—ã–±–æ—Ä –∑–∞–≤–∏—Å–∏–º–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
        self.ui.buttonClean.clicked.connect(self.setCleanTable) # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        self.ui.buttonFill.clicked.connect(self.setFillTable)   # –û—á–∏—â–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã

        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–µ–≥—Ä–µ—Å—Å–∏–∏
        self.ui.buttonBack.clicked.connect(self.setBackup)  # –®–ê–ì: –Ω–∞–∑–∞–¥
        self.ui.buttonForward.clicked.connect(self.setAnalyseStep)  # –®–ê–ì: –≤–ø–µ—Ä–µ–¥

    #------------------------------------------#

    # –°–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –º–µ–Ω—é
    def toggleFrameAnalyse(self, frame):
        if self.ui.dockExplorer.setVisible(self.ui.actionExplorerMB.isChecked()):
            frame.hide()
            self.is_frame_visible = False
            self.button.setIcon(QIcon("arrow_icon_up.png"))
        else:
            frame.show()
            self.is_frame_visible = True
            self.button.setIcon(QIcon("arrow_icon_down.png"))

    # –í—ã–±–æ—Ä –∑–∞–≤–∏—Å–∏–º–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
    def setChoiceDepVar(self):
        self.MR.Ynum = self.ui.choiceYComboBox.currentIndex()                                                                 # –ù–æ–º–µ—Ä —Å—Ç–æ–ª–±—Ü–∞ Y –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ MR
        self.Ynum = self.MR.Columns - self.ui.countYComboBox.currentIndex() + self.ui.choiceYComboBox.currentIndex() - 1    # –ù–æ–º–µ—Ä —Å—Ç–æ–ª–±—Ü–∞ Y –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–∫—Ä–∞—à–∏–≤–∞–Ω–∏—è
        self.changeBackgrounColor(list(range(self.MR.ColumnsX_BUF, self.MR.Columns)),'#505A6E','#f6f9ff')
        self.changeBackgrounColor([self.Ynum],'#255a66','#f6f9ff')

    # –í—ã–±–æ—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–≤–∏—Å–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    def setCountDepVar(self):
        self.MR.readExel(self.ui.countYComboBox.currentIndex()+1)
        self.ui.choiceYComboBox.clear()
        self.ui.choiceYComboBox.addItems(self.MR.dataset.columns[self.MR.ColumnsX:self.MR.Columns])       # –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –∑–∞–≤–∏—Å–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        self.setFillTable()
        self.changeBackgrounColor(list(range(self.MR.ColumnsX_BUF, self.MR.Columns)),'#505A6E','#f6f9ff')

    # –í—ã–±–æ—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–≤–∏—Å–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏ —Å–∞–º–æ–π –∑–∞–≤–∏—Å–∏–º–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
    def setCountAndChoiceDepVar(self):
        self.setCountDepVar()
        self.setChoiceDepVar()

    # –û—Ç—á–∏—Å—Ç–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–∞–±–ª–∏—Ü—ã (–∫—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç - —ç–ª–µ–º–µ–Ω—Ç —É–¥–∞–æ–µ–Ω)
    def setCleanTable(self):
        self.MR.cleanTable()
        self.changeBackgrounColor(list(range(self.MR.ColumnsX_BUF)),'#ffc5c5','#3e4556')
        self.graphicsDraw()

    # –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –¥–∞–Ω–Ω—ã–º–∏ (–∑–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç - —ç–ª–µ–º–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω)
    def setFillTable(self):
        self.MR.filledTable()
        self.changeBackgrounColor(list(range(self.MR.ColumnsX_BUF)),'#bcf5d3','#3e4556')
        self.graphicsDraw()

    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è
    def setBackup(self):
        self.MR.outBackup()
        for i in range(len(self.MR.X_BUF[0])):
            if i in self.MR.IndX_ADD: self.changeBackgrounColor([i],'#bcf5d3','#3e4556')
            else: self.changeBackgrounColor([i],'#ffc5c5','#3e4556')
        self.setEditTextBox()
        self.graphicsDraw()

    # –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è —Ä–µ–≥—Ä–µ—Å—Å–∏–∏
    def setAnalyseStep(self):
        if(self.ui.buttonBackEleminate.isChecked()):
            if(self.ui.buttonAutoMode.isChecked()):
                self.backwardElimination()
            elif(self.ui.buttonHandMode.isChecked()):
                self.backwardEliminationStep()
        elif(self.ui.buttonStepwise.isChecked()):
            if(self.ui.buttonAutoMode.isChecked()):
                self.stepwise()
            elif(self.ui.buttonHandMode.isChecked()):
                self.stepwiseStep()
        self.graphicsDraw()

    #------------------------------------------#

    # –¶–∏–∫–ª –±—Ä–∞—Ç–Ω–æ–π –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏
    def backwardElimination(self):
        self.statusBar.showMessage("–û–±—Ä–∞—Ç–Ω–∞—è –ª–∏–∫–≤–∏–¥–∞—Ü–∏—è")
        while self.MR.R2 > self.MR.Const_R2:
            self.backwardEliminationStep()

    # –®–∞–≥ –æ–±—Ä–∞—Ç–Ω–æ–π –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏
    def backwardEliminationStep(self):
        if len(self.MR.IndX_ADD) > 1:
            self.MR.DELXK()
            self.setEditTextBox()
            self.changeBackgrounColor([self.MR.IndX_DEL[-1]],'#ffc5c5','#3e4556')
            self.statusBar.showMessage(f'–ë—ã–ª —É–¥–∞–ª–µ–Ω —ç–ª–µ–º–µ–Ω—Ç: {self.MR.IndX_DEL[-1] + 1}')

    # –¶–∏–∫–ª –ø—Ä—è–º–æ–≥–æ –≤–∫–ª—é—á–µ–Ω–∏—è
    def stepwise(self):
        self.statusBar.showMessage("–ü—Ä—è–º–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ")
        if(self.MR.FSKF <= self.MR.Const_FSKF):
            while self.MR.FSKF < self.MR.Const_FSKF:
                self.stepwiseStep()

    # –®–∞–≥ –ø—Ä—è–º–æ–≥–æ –≤–∫–ª—é—á–µ–Ω–∏—è
    def stepwiseStep(self):
        self.MR.ADDXK()
        self.setEditTextBox()
        self.changeBackgrounColor([self.MR.IndX_ADD[-1]],'#bcf5d3','#3e4556')
        self.statusBar.showMessage(f'–ë—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω —ç–ª–µ–º–µ–Ω—Ç: {self.MR.IndX_ADD[-1] + 1}')

    # –í–∫–ª—é—á–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ—Ä–∞ –ø–æ –≤—ã–±–æ—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    def userStepwiseStep(self):
        i = self.tableDatabaseSelectionItem()
        if i in self.MR.IndX_DEL:
            self.MR.ADDXE(self.MR.IndX_DEL.index(i))
            self.setEditTextBox()
            self.changeBackgrounColor([self.MR.IndX_ADD[-1]],'#bcf5d3','#3e4556')
            self.statusBar.showMessage(f'–ë—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω —ç–ª–µ–º–µ–Ω—Ç: {self.MR.IndX_ADD[-1] + 1}')
            self.tableDatabaseSelectionItem()

    # –ò—Å–∫–ª—é—á–µ–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä–∞ –ø–æ –≤—ã–±–æ—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    def userBackwardStep(self):
        i = self.tableDatabaseSelectionItem()
        if i in self.MR.IndX_ADD:
            self.MR.DELXE(self.MR.IndX_ADD.index(i))
            self.setEditTextBox()
            self.changeBackgrounColor([self.MR.IndX_DEL[-1]],'#ffc5c5','#3e4556')
            self.statusBar.showMessage(f'–ë—ã–ª —É–¥–∞–ª–µ–Ω —ç–ª–µ–º–µ–Ω—Ç: {self.MR.IndX_DEL[-1] + 1}')
            self.tableDatabaseSelectionItem()

    ##############################################
    # [ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ dockWidget - Graphics ] #
    ##############################################

    def actionsDWG(self):
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è dockWidget Auto-Hand, —á—Ç–æ–±—ã –≤ –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –±—ã–ª–æ –∞–∫—Ç–∏–≤–Ω–æ —Ç–æ–ª—å–∫–æ 1 –¥–µ–π—Å—Ç–≤–∏–µ
        groupGraphics =  QButtonGroup(self)
        groupGraphics.addButton(self.ui.buttonGrSKD)
        groupGraphics.addButton(self.ui.buttonGrSKS)
        groupGraphics.addButton(self.ui.buttonGrE)
        self.ui.buttonGrE.setChecked(True)

        self.ui.buttonGrSKD.clicked.connect(self.graphicsDraw) # –ó–Ω–∞—á–µ–Ω–∏—è R2 –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏
        self.ui.buttonGrSKS.clicked.connect(self.graphicsDraw) # –ó–Ω–∞—á–µ–Ω–∏—è R2 –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏
        self.ui.buttonGrE.clicked.connect(self.graphicsDraw) # –û—à–∏–±–∫–∏ –ø–æ—Å—á–∏—Ç–∞–Ω–Ω–æ–≥–æ –∏ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ Y

    #---------------------------------#

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª—è
    def graphicsInit(self):
        # -- Graphics init --
        self.ui.figure = plt.figure()
        self.ui.figure.patch.set_facecolor('#3e4556')
        self.ui.canvas = FigureCanvas(self.ui.figure)
        self.ui.verticalLayoutGraphics = QtWidgets.QVBoxLayout(self.ui.Graphics)
        self.ui.verticalLayoutGraphics.setContentsMargins(0, 0, 0, 0)
        self.ui.verticalLayoutGraphics.addWidget(self.ui.canvas)
        matplotlib.rcParams.update({'font.size': 8,'ytick.color':'#E6E6E6', 'xtick.color':'#E6E6E6'})
        plt.rc('axes', facecolor='#3e4556', edgecolor='#E6E6E6', axisbelow=True, grid=True)
        plt.rc('lines', linewidth=2)

    # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –Ω—É–∂–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞
    def graphicsDraw(self):
        # -- Graphics paint --
        self.ui.figure.clear()
        if(self.ui.buttonGrSKD.isChecked() and len(self.MR.R2_DEL) > 0):
            plt.bar(range(len(self.MR.IndX_DEL)), self.MR.R2_DEL, color ='#3c90a4', width = 0.2, edgecolor='#E6E6E6')
        elif(self.ui.buttonGrSKS.isChecked() and len(self.MR.FSKF_ADD) > 0):
            plt.bar(range(len(self.MR.IndX_ADD)), self.MR.FSKF_ADD, color ='#3c90a4', width = 0.2, edgecolor='#E6E6E6')
        elif(self.ui.buttonGrE.isChecked() and len(self.MR.E) > 0):
            yneg = []
            ypos = []
            for e in self.MR.E:
                if e < 0:
                    yneg.append(e*(-1))
                    ypos.append(0)
                else:
                    yneg.append(0)
                    ypos.append(e)
            y_error = [yneg, ypos] # –û—à–∏–±–∫–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
            plt.errorbar(x=range(len(self.MR.E)), y=self.MR.Y[:,self.MR.Ynum], yerr=y_error, marker ='o', color ='#3c90a4', ecolor='red', linestyle='none', elinewidth=1)
        self.ui.canvas.draw()


    ###################################
    # [ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ mainWindow ] #
    ###################################

    def actionsMW(self):
        self.ui.buttonSelectFile.clicked.connect(self.selectFile) # –í—ã–±–æ—Ä —Ñ–∞–π–ª–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
        self.ui.buttonSelectFolder.clicked.connect(self.selectFolder) # –í—ã–±–æ—Ä —Ä–∞–±–æ—á–µ–π –ø–∞–ø–∫–∏

    #---------------------------------#

    # –í—ã–±–æ—Ä —Ä–∞–±–æ—á–µ–≥–æ —Ñ–∞–π–ª–∞
    def selectFile(self):
        pathFile = QFileDialog.getOpenFileName(self,'–í—ã–±–æ—Ä —Ñ–∞–π–ª–∞ –¥–∞–Ω–Ω—ã—Ö',os.getenv('HOME'),'XLSX Files(*.xlsx)')
        if pathFile[0] == '': return
        pathFolder = os.path.dirname(pathFile[0])
        self.setFT(pathFolder) # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤–æ–≥–æ –¥–µ—Ä–µ–≤–∞
        self.statusBar.showMessage("–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: {}".format(pathFile[0])) # –°–æ–æ–±—â–µ–Ω–∏–µ –≤ statusBar
        self.ui.buttonSelectFolder.setVisible(False)

        self.FT.openFile(pathFile[0])

    # –í—ã–±–æ—Ä —Ä–∞–±–æ—á–µ–π –ø–∞–ø–∫–∏
    def selectFolder(self):
        pathFolder = QFileDialog.getExistingDirectory(self,'–í—ã–±–æ—Ä —Ä–∞–±–æ—á–µ–π –ø–∞–ø–∫–∏',os.getenv('HOME'), QFileDialog.ShowDirsOnly)
        if pathFolder == '': return
        self.setFT(pathFolder) # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤–æ–≥–æ –¥–µ—Ä–µ–≤–∞
        self.statusBar.showMessage("–í—ã–±—Ä–∞–Ω–∞ –ø–∞–ø–∫–∞: {}".format(pathFolder)) # –°–æ–æ–±—â–µ–Ω–∏–µ –≤ statusBar
        self.ui.buttonSelectFolder.setVisible(False)
        self.ui.dockExplorer.setVisible(1)

    ###################################
    # [ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ reportWindow ] #
    ###################################

    def actionsRW(self):
        self.ui.reportText.setFont(QFont('MS Shell Dlg 2', 16))  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —à—Ä–∏—Ñ—Ç–∞ —Ä–∞–∑–º–µ—Ä–æ–º 16
        self.ui.buttonReportCreate.clicked.connect(self.setReport) # –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞

    #---------------------------------#

    def setReport(self):
        X_DEL = []; X_ADD = [];
        for i in self.MR.IndX_DEL: X_DEL.append(self.MR.dataset.columns[i])
        for i in self.MR.IndX_ADD: X_ADD.append(self.MR.dataset.columns[i])

        file_name, _ = QFileDialog.getSaveFileName(self, '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç—á–µ—Ç', '', '(*.rep)')

        if file_name:
            try:
                self.saveReport(file_name, X_DEL, X_ADD)

                self.statusBar.showMessage("–û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
                self.openReport(file_name)

            except Exception as e:
                self.statusBar.showMessage(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {str(e)}")

    def saveReport(self, file_name, X_DEL, X_ADD):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
        with open(file_name, 'w', encoding='utf-8') as f:
            f.write("–û–¢–ß–ï–¢ –ü–û –†–ï–ì–†–ï–°–°–ò–û–ù–ù–û–ú–£ –ê–ù–ê–õ–ò–ó–£\n")
            f.write("=" * 50 + "\n")
            f.write(f"–î–∞—Ç–∞: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}\n\n")

            f.write("–û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:\n")
            f.write("-" * 25 + "\n")
            f.write(f"–í–∫–ª—é—á–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {len(X_ADD)}\n")
            f.write(f"–ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {len(X_DEL)}\n")
            f.write(f"–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç R¬≤: {self.MR.R2:.6f}\n")
            f.write(f"F-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {self.MR.FSKF:.6f}\n\n")

            f.write("–í–ö–õ–Æ–ß–ï–ù–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï:\n")
            f.write("-" * 25 + "\n")
            for i, var in enumerate(X_ADD, 1):
                f.write(f"{i}. {var}\n")
            if not X_ADD:
                f.write("–ù–µ—Ç –≤–∫–ª—é—á–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö\n")
            f.write("\n")

            f.write("–ò–°–ö–õ–Æ–ß–ï–ù–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï:\n")
            f.write("-" * 25 + "\n")
            for i, var in enumerate(X_DEL, 1):
                f.write(f"{i}. {var}\n")
            if not X_DEL:
                f.write("–ù–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö\n")
            f.write("\n")

            f.write("–ö–û–≠–§–§–ò–¶–ò–ï–ù–¢–´ –†–ï–ì–†–ï–°–°–ò–ò:\n")
            f.write("-" * 25 + "\n")
            for i, coef in enumerate(self.MR.REE):
                if i == 0:
                    f.write(f"–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç {i}: {coef:.6f} - –°–≤–æ–±–æ–¥–Ω—ã–π —á–ª–µ–Ω (–∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞)\n")
                else:
                    var_index = i - 1  # –ø–æ—Ç–æ–º—É —á—Ç–æ 0 - –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞
                    if var_index < len(X_ADD):
                        var_name = X_ADD[var_index]
                        f.write(f"–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç {i}: {coef:.6f} - –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è {var_name}\n")
                    else:
                        f.write(f"–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç {i}: {coef:.6f} - –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è X{var_index}\n")
            f.write("\n")

            # –ê–Ω–∞–ª–∏–∑ –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ —ç–ª–∞—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
            if hasattr(self.MR, 'PAC') and self.MR.PAC is not None:
                f.write("–ê–ù–ê–õ–ò–ó –í–õ–ò–Ø–ù–ò–Ø –ü–ï–†–ï–ú–ï–ù–ù–´–•:\n")
                f.write("-" * 35 + "\n")
                sorted_pac = sorted(zip(X_ADD, self.MR.PAC), key=lambda x: abs(x[1]), reverse=True)

                f.write("–†–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –≤–ª–∏—è–Ω–∏—é –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n")
                for i, (var_name, pac) in enumerate(sorted_pac, 1):
                    influence = "–í—ã—Å–æ–∫–æ–µ" if abs(pac) > 0.3 else "–°—Ä–µ–¥–Ω–µ–µ" if abs(pac) > 0.1 else "–ù–∏–∑–∫–æ–µ"
                    f.write(f"{i}. {var_name}: {pac*100:6.2f}% ({influence} –≤–ª–∏—è–Ω–∏–µ)\n")
                f.write("\n")

    def openReport(self, file_name):
        if file_name:
            try:
                with open(file_name, 'r', encoding='utf-8') as f:
                                content = f.read()

                self.ui.reportText.clear()
                # self.ui.reportText.append(f'–ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞: {file_name}\n')
                self.ui.reportText.setFont(QFont('Consolas', 10))
                self.ui.reportText.append(content)

            except Exception as e:
                self.statusBar.showMessage(f"–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞: {str(e)}")

    ##############################################
    # [ –†–∞–±–æ—Ç–∞ –æ–±—ä–µ–∫—Ç–∞ —Ä–µ–≥—Ä–µ—Å—Å–∏–∏ analyseWindow ] #
    ##############################################

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –æ–±—ä–µ–∫—Ç–∞ —Ä–µ–≥—Ä–µ—Å—Å–∏–∏
    def MRInit(self, path):
        self.MR = StepwiseRegressionEngine(path,1)   # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Ä–µ–≥—Ä–µ—Å—Å–∏–∏ (—Ñ–∞–π–ª –∏ –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
        self.MR.readExel(1)                     # –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ (4 - –∑–∞–≤–∏—Å–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ)
        if self.MR.dataset.size == 0:           # !! - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ - !!
            return print("MRInit")

        self.ui.dockAnalyse.setVisible(True)
        self.ui.dockAnalyse.setStyleSheet(StyleSheetScrollBar)
        self.ui.choiceYComboBox.addItems(self.MR.dataset.columns[self.MR.ColumnsX:self.MR.Columns])     # –°–ø–∏—Å–æ–∫ –∑–∞–≤–∏—Å–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        self.ui.countYComboBox.addItems(map(str, range(1, self.MR.Columns - 1)))

        self.actionsDWA()   # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ dockWidget Analyse
        self.actionsRW()   # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ Report Widget
        self.actionsDWG()   # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ dockWidget Graphics
        self.setTableDatabase() # –í—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Exel –≤ —Ç–∞–±–ª–∏—Ü—É
        self.setCountDepVar() # –í—ã–±–æ—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–≤–∏—Å–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        self.setChoiceDepVar()  # –í—ã–±–æ—Ä –∑–∞–≤–∏—Å–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        self.setEditTextBox() # –í—ã–≤–æ–¥ editBoxes —Å —Ä–∞—Å—á–µ—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ä–µ–≥—Ä–µ—Å—Å–∏–∏
        # self.graphicsDraw() # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞

    #------------------------------------------#
    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –∫–æ–ª–æ–Ω–Ω —Ç–∞–±–ª–∏—Ü—ã
    def changeBackgrounColor(self,columns_paint,colorBG,colorFG):
        for i in range(self.MR.Lines):
            for j in columns_paint:
                self.ui.tableDatabase.item(i,j).setBackground(QtGui.QColor(colorBG)) # –†–∞—Å–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ —Ñ–æ–Ω–∞ —Å—Ç–æ–ª–±—Ü–æ–≤
                self.ui.tableDatabase.item(i,j).setForeground(QtGui.QColor(colorFG)) # –†–∞—Å–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å—Ç–æ–ª–±—Ü–æ–≤

    # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–µ–π —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ä–µ–≥—Ä–µ—Å—Å–∏–∏
    def setEditTextBox(self):
        self.ui.lineEditKK.setText(str(self.MR.R))
        self.ui.lineEditKD.setText(str(self.MR.R2))
        self.ui.lineEditKS.setText(str(self.MR.FSKF))

        self.ui.lineEditOD.setText(str(self.MR.Y_Se2))
        self.ui.lineEditNOD.setText(str(self.MR.Y_S2))
        self.ui.lineEditOSKO.setText(str(self.MR.Y_S))

        self.ui.lineEditKDConst.setText(str(self.MR.Const_R2))
        self.ui.lineEditKSConst.setText(str(self.MR.Const_FSKF))

    ##############################################
    # [ –†–∞–±–æ—Ç–∞ c tableDatabase ] #
    ##############################################
    def setTableDatabase(self):
        self.ui.tableDatabase.setStyleSheet(StyleSheetTableDatabase + StyleSheetScrollBar)
        self.ui.tableDatabase.setRowCount(self.MR.Lines)                               # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫
        self.ui.tableDatabase.setColumnCount(self.MR.Columns)                          # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤
        self.ui.tableDatabase.setHorizontalHeaderLabels(self.MR.dataset.columns);      # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Ç–∞–±–ª–∏—Ü—ã (–∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤)

        # –í—ã–≤–æ–¥ —Ç–∞–±–ª–∏—Ü—ã –∏–∑ Exel
        for row in self.MR.dataset.iterrows():
            values = row[1]
            for col_index, value in enumerate(values):
                tableItem = QTableWidgetItem(str(value))
                self.ui.tableDatabase.setItem(row[0],col_index,tableItem)

        self.ui.tableDatabase.itemSelectionChanged.connect(self.tableDatabaseSelectionItem)
        self.ui.buttonAdd.clicked.connect(self.userStepwiseStep) # –í–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–≥–æ —Ñ–∞–∫—Ç–æ—Ä–∞ –ø–æ –º–Ω–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.ui.buttonDelete.clicked.connect(self.userBackwardStep) # –í–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–≥–æ —Ñ–∞–∫—Ç–æ—Ä–∞ –ø–æ –º–Ω–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    def tableDatabaseSelectionItem(self):
        selected_items = self.ui.tableDatabase.selectedItems()
        if selected_items:
            selected_item = selected_items[0]  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
            column_number = selected_item.column()
            if(column_number in self.MR.IndX_ADD):
                self.ui.buttonDelete.setEnabled(True)
                self.ui.buttonAdd.setEnabled(False)
                self.ui.buttonDelete.setStyleSheet("""#buttonDelete{border-color: #ffc5c5;} #buttonDelete:hover{border-color: #505A6E;}""")
                self.ui.buttonAdd.setStyleSheet("""#buttonAdd{border-color: white;}""")
            elif(column_number in self.MR.IndX_DEL):
                self.ui.buttonAdd.setEnabled(True)
                self.ui.buttonDelete.setEnabled(False)
                self.ui.buttonDelete.setStyleSheet("""#buttonDelete{border-color: white;}""")
                self.ui.buttonAdd.setStyleSheet("""#buttonAdd{border-color: #bcf5d3;} #buttonAdd:hover{border-color: #505A6E;}""")
            else:
                self.ui.buttonAdd.setEnabled(False)
                self.ui.buttonDelete.setEnabled(False)
                self.ui.buttonDelete.setStyleSheet("""#buttonDelete{border-color: white;}""")
                self.ui.buttonAdd.setStyleSheet("""#buttonAdd{border-color: white;}""")
            return column_number



if __name__ == '__main__':
    import sys
    from PyQt5.QtWidgets import QApplication
    app = QApplication(sys.argv)
    app.setStyleSheet(StyleSheetApp)
    w = MainWindow()
    w.setWindowIcon(QIcon(r'src\ui\resources\Logo\SHV_icon.svg'))
    w.show()
    # w = FramelessWindow()
    # w.setWindowTitle(' –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è [by Artem Shishov]')
    # w.setIconSize(40)
    # w.setWindowIcon(QIcon(r'src\ui\resources\Logo\SHV_icon.svg'))
    # w.setWidget(MainWindow(w))          # –î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–µ –æ–∫–Ω–æ
    # w.show()
    sys.exit(app.exec_())